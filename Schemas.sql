--
-- File generated with SQLiteStudio v3.4.4 on Fri Jul 5 13:24:22 2024
--
-- Text encoding used: System
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: BOT_LOG
CREATE TABLE IF NOT EXISTS BOT_LOG (
    LOG_ID          INTEGER  PRIMARY KEY AUTOINCREMENT
                             UNIQUE
                             NOT NULL,
    LOG_TIME        DATETIME,
    MESSAGE         STRING,
    SERVER          STRING,
    SERVER_ID       INTEGER,
    CHANNEL         STRING,
    CHANNEL_ID      INTEGER,
    INVOKED_USER    STRING,
    INVOKED_USER_ID INTEGER,
    COMMAND         STRING,
    ARGUMENTS       STRING,
    TARGET          STRING,
    FUNCTION        STRING,
    TARGET_USER     STRING,
    TARGET_USER_ID  INTEGER,
    MESSAGE_ID      INTEGER
);


-- Table: MESSAGE_ATTACHMENT_HISTORY
CREATE TABLE IF NOT EXISTS MESSAGE_ATTACHMENT_HISTORY (
    RECORD_ID  INTEGER PRIMARY KEY AUTOINCREMENT
                       UNIQUE
                       NOT NULL,
    ID         INTEGER,
    FILENAME   STRING,
    URL        STRING,
    IS_SPOILER INTEGER,
    MESSAGE_ID INTEGER,
    GUILD_ID   INTEGER,
    IMAGE_TEXT STRING,
    IMAGE      INTEGER
);


-- Table: MESSAGE_HISTORY
CREATE TABLE IF NOT EXISTS MESSAGE_HISTORY (
    RECORD_ID           INTEGER  PRIMARY KEY AUTOINCREMENT
                                 UNIQUE
                                 NOT NULL,
    RECORD_TIMESTAMP    DATETIME,
    TTS                 INTEGER,
    TYPE                STRING,
    AUTHOR              STRING,
    CHANNEL             STRING,
    MENTION_EVERYONE    INTEGER,
    ID                  INTEGER,
    ATTACHMENTS         STRING,
    PINNED              INTEGER,
    REACTIONS           STRING,
    GUILD               STRING,
    RAW_MENTIONS        STRING,
    CREATED_AT          DATETIME,
    EDITED_AT           DATETIME,
    JUMP_URL            STRING,
    IS_SYSTEM           INTEGER,
    CONTENT             STRING,
    GUILD_ID            INTEGER,
    AUTHOR_ID           INTEGER,
    AUTHOR_DISPLAY_NAME STRING,
    AUTHOR_BOT          INTEGER,
    CHANNEL_ID          INTEGER,
    YOUTUBE             INTEGER,
    SPOTIFY             INTEGER
);


-- Table: RANDOM_ATTACHMENT_BLACKLIST
CREATE TABLE IF NOT EXISTS RANDOM_ATTACHMENT_BLACKLIST (
    RECORD_ID                    INTEGER  PRIMARY KEY AUTOINCREMENT,
    RECORD_TIMESTAMP             DATETIME,
    GUILD_ID                     INTEGER,
    BLACKLISTER_ID               INTEGER,
    BLACKLISTER_NAME             STRING,
    BLACKLISTER_DISCRIMINATOR    INTEGER,
    RANDOM_ATTACHMENT_MESSAGE_ID INTEGER,
    ATTACHMENT_ID                INTEGER,
    ATTACHMENT_LOCAL_ID          INTEGER,
    ATTACHMENT_URL               STRING,
    ORIGINAL_MESSAGE_ID          INTEGER,
    ALL_BLACKLISTERS             STRING
);


-- Table: TTS_LOG
CREATE TABLE IF NOT EXISTS TTS_LOG (
    RECORD_ID  INTEGER PRIMARY KEY AUTOINCREMENT,
    MESSAGE_ID INTEGER
);


-- Table: USER_COMMANDS
CREATE TABLE IF NOT EXISTS USER_COMMANDS (
    COMMAND_ID       INTEGER  PRIMARY KEY AUTOINCREMENT
                              UNIQUE
                              NOT NULL,
    TRIGGER          STRING,
    MESSAGE          STRING,
    TEXT_TO_SPEECH   INTEGER,
    SERVER           STRING,
    SERVER_ID        INTEGER,
    USER_ADDED       STRING,
    USER_ADDED_ID    INTEGER,
    CHANNEL_ADDED    STRING,
    CHANNEL_ADDED_ID INTEGER,
    ADDED_TIMESTAMP  DATETIME
);


-- Index: MAH_GUILD_ID_INDEX
CREATE INDEX IF NOT EXISTS MAH_GUILD_ID_INDEX ON MESSAGE_ATTACHMENT_HISTORY (
    GUILD_ID
);


-- Index: MAH_ID_INDEX
CREATE INDEX IF NOT EXISTS MAH_ID_INDEX ON MESSAGE_ATTACHMENT_HISTORY (
    ID
);


-- Index: MAH_IMAGE_TEXT_INDEX
CREATE INDEX IF NOT EXISTS MAH_IMAGE_TEXT_INDEX ON MESSAGE_ATTACHMENT_HISTORY (
    IMAGE_TEXT
);


-- Index: MAH_MESSAGE_ID_INDEX
CREATE INDEX IF NOT EXISTS MAH_MESSAGE_ID_INDEX ON MESSAGE_ATTACHMENT_HISTORY (
    MESSAGE_ID
);


-- Index: MAH_URL_INDEX
CREATE INDEX IF NOT EXISTS MAH_URL_INDEX ON MESSAGE_ATTACHMENT_HISTORY (
    URL
);


-- Index: MH_AUTHOR_ID_INDEX
CREATE INDEX IF NOT EXISTS MH_AUTHOR_ID_INDEX ON MESSAGE_HISTORY (
    AUTHOR_ID
);


-- Index: MH_AUTHOR_INDEX
CREATE INDEX IF NOT EXISTS MH_AUTHOR_INDEX ON MESSAGE_HISTORY (
    AUTHOR
);


-- Index: MH_CHANNEL_ID_INDEX
CREATE INDEX IF NOT EXISTS MH_CHANNEL_ID_INDEX ON MESSAGE_HISTORY (
    CHANNEL_ID
);


-- Index: MH_CREATED_AT_INDEX
CREATE INDEX IF NOT EXISTS MH_CREATED_AT_INDEX ON MESSAGE_HISTORY (
    CREATED_AT
);


-- Index: MH_GUILD_ID_INDEX
CREATE INDEX IF NOT EXISTS MH_GUILD_ID_INDEX ON MESSAGE_HISTORY (
    GUILD_ID
);


-- Index: MH_ID_INDEX
CREATE INDEX IF NOT EXISTS MH_ID_INDEX ON MESSAGE_HISTORY (
    ID
);


-- Index: MH_RECORD_TIMESTAMP_INDEX
CREATE INDEX IF NOT EXISTS MH_RECORD_TIMESTAMP_INDEX ON MESSAGE_HISTORY (
    RECORD_TIMESTAMP
);


-- Index: RAB_ATTACHMENT_ID_INDEX
CREATE INDEX IF NOT EXISTS RAB_ATTACHMENT_ID_INDEX ON RANDOM_ATTACHMENT_BLACKLIST (
    ATTACHMENT_ID
);


-- Index: RAB_ATTACHMENT_LOCAL_ID_INDEX
CREATE INDEX IF NOT EXISTS RAB_ATTACHMENT_LOCAL_ID_INDEX ON RANDOM_ATTACHMENT_BLACKLIST (
    ATTACHMENT_LOCAL_ID
);


-- Index: RAB_GUILD_ID_INDEX
CREATE INDEX IF NOT EXISTS RAB_GUILD_ID_INDEX ON RANDOM_ATTACHMENT_BLACKLIST (
    GUILD_ID
);


-- Index: RAB_ORIGINAL_MESSAGE_ID_INDEX
CREATE INDEX IF NOT EXISTS RAB_ORIGINAL_MESSAGE_ID_INDEX ON RANDOM_ATTACHMENT_BLACKLIST (
    ORIGINAL_MESSAGE_ID
);


-- Index: RAB_RECORD_ID_INDEX
CREATE UNIQUE INDEX IF NOT EXISTS RAB_RECORD_ID_INDEX ON RANDOM_ATTACHMENT_BLACKLIST (
    RECORD_ID
);


-- Index: TL_MESSAGE_ID_INDEX
CREATE INDEX IF NOT EXISTS TL_MESSAGE_ID_INDEX ON TTS_LOG (
    MESSAGE_ID
);


-- Index: TL_RECORD_ID_INDEX
CREATE UNIQUE INDEX IF NOT EXISTS TL_RECORD_ID_INDEX ON TTS_LOG (
    RECORD_ID
);


COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
